{
  "version": 3,
  "sources": ["../../../../../Modules/MovieDB/Movie/MoviePage.ts", "../../../../../Modules/MovieDB/Movie/MovieGrid.ts", "../../../../../Modules/MovieDB/Movie/MovieDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib';\r\nimport { MovieGrid } from './MovieGrid';\r\n\r\nexport default function pageInit() {\n    initFullHeightGridPage(new MovieGrid($('#GridDiv')).element);\n}", "import { Decorators, EntityGrid, first, localText, LookupEditor, QuickSearchField} from '@serenity-is/corelib';\nimport { MovieColumns, MovieRow, MovieService } from '@/ServerTypes/MovieDB';\nimport { MovieListRequest } from '@/ServerTypes/Modules/MovieDB.Movie.MovieListRequest';\r\nimport { MovieDialog } from './MovieDialog';\r\n\r\n@Decorators.registerClass('WebApp.MovieDB.MovieGrid')\nexport class MovieGrid extends EntityGrid<MovieRow, any> {\n    protected getColumnsKey() { return MovieColumns.columnsKey; }\n    protected getDialogType() { return MovieDialog; }\n    protected getRowDefinition() { return MovieRow; }\n    protected getService() { return MovieService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n    protected getQuickSearchFields(): QuickSearchField[] {\n        const fields = MovieRow.Fields;\n        return [\n            { name: \"\", title : \"All\" },\n            { name: fields.Description, title: fields.Description },\n            { name: fields.Storyline, title: fields.Storyline },\n            { name: fields.Year, title: fields.Year }\n        ];\n    }\n\n    protected getQuickFilters() {\n        let items = super.getQuickFilters();\n\n        const genreListFilter = first(items, x =>\n            x.field == MovieRow.Fields.GenreList);\n\n        genreListFilter.handler = h => {\n            const request = (h.request as MovieListRequest);\n            const values = (h.widget as LookupEditor).values;\n            request.Genres = values.map(x => parseInt(x, 10));\n            h.handled = true;\n        };\n\n        return items;\n    }\n}", "\uFEFFimport { MovieForm, MovieRow, MovieService } from '@/ServerTypes/MovieDB';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('WebApp.MovieDB.MovieDialog')\nexport class MovieDialog extends EntityDialog<MovieRow, any> {\n    protected getFormKey() { return MovieForm.formKey; }\n    protected getRowDefinition() { return MovieRow; }\n    protected getService() { return MovieService.baseUrl; }\n\n    protected form = new MovieForm(this.idPrefix);\n}"],
  "mappings": "wJAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAwF,SCCxF,IAAAC,EAAyC,SAGlC,IAAMC,EAAN,cAA0B,cAA4B,CAAtD,kCAKH,KAAU,KAAO,IAAIC,EAAU,KAAK,QAAQ,EAJlC,YAAa,CAAE,OAAOA,EAAU,OAAS,CACzC,kBAAmB,CAAE,OAAOC,CAAU,CACtC,YAAa,CAAE,OAAOC,EAAa,OAAS,CAG1D,EAN6DC,EAAAJ,EAAA,eAAhDA,EAANK,EAAA,CADN,aAAW,cAAc,4BAA4B,GACzCL,GDEN,IAAMM,EAAN,cAAwB,YAA0B,CAC3C,eAAgB,CAAE,OAAOC,EAAa,UAAY,CAClD,eAAgB,CAAE,OAAOC,CAAa,CACtC,kBAAmB,CAAE,OAAOC,CAAU,CACtC,YAAa,CAAE,OAAOC,EAAa,OAAS,CAEtD,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACU,sBAA2C,CACjD,IAAMC,EAASH,EAAS,OACxB,MAAO,CACH,CAAE,KAAM,GAAI,MAAQ,KAAM,EAC1B,CAAE,KAAMG,EAAO,YAAa,MAAOA,EAAO,WAAY,EACtD,CAAE,KAAMA,EAAO,UAAW,MAAOA,EAAO,SAAU,EAClD,CAAE,KAAMA,EAAO,KAAM,MAAOA,EAAO,IAAK,CAC5C,CACJ,CAEU,iBAAkB,CACxB,IAAIC,EAAQ,MAAM,gBAAgB,EAE5BC,KAAkB,SAAMD,EAAOE,GACjCA,EAAE,OAASN,EAAS,OAAO,SAAS,EAExC,OAAAK,EAAgB,QAAUE,GAAK,CAC3B,IAAMC,EAAWD,EAAE,QACbE,EAAUF,EAAE,OAAwB,OAC1CC,EAAQ,OAASC,EAAO,IAAIH,GAAK,SAASA,EAAG,EAAE,CAAC,EAChDC,EAAE,QAAU,EAChB,EAEOH,CACX,CACJ,EAlCyDM,EAAAb,EAAA,aAA5CA,EAANc,EAAA,CADN,aAAW,cAAc,0BAA0B,GACvCd,GDHE,SAARe,GAA4B,IAC/B,0BAAuB,IAAIC,EAAU,EAAE,UAAU,CAAC,EAAE,OAAO,CAC/D,CAFwBC,EAAAF,EAAA",
  "names": ["import_corelib", "import_corelib", "import_corelib", "MovieDialog", "MovieForm", "MovieRow", "MovieService", "__name", "__decorateClass", "MovieGrid", "MovieColumns", "MovieDialog", "MovieRow", "MovieService", "container", "fields", "items", "genreListFilter", "x", "h", "request", "values", "__name", "__decorateClass", "pageInit", "MovieGrid", "__name"]
}
